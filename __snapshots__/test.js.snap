exports[`test renders index.html from README 1`] = `
"<!doctype html><html lang=\"en\"><head><meta charset=\"utf-8\"><title>github-markdown-html</title><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"></head><body><style>.markdown-body{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;color:#333;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif;font-size:16px;line-height:1.5;word-wrap:break-word}.markdown-body a{background-color:transparent;-webkit-text-decoration-skip:objects}.markdown-body a:active,.markdown-body a:hover{outline-width:0}.markdown-body h1{font-size:2em;margin:.67em 0}.markdown-body code,.markdown-body pre{font-family:monospace,monospace;font-size:1em}.markdown-body *{box-sizing:border-box}.markdown-body a{color:#4078c0;text-decoration:none}.markdown-body a:active,.markdown-body a:hover{text-decoration:underline}.markdown-body h1,.markdown-body h2,.markdown-body h3{margin-top:0;margin-bottom:0}.markdown-body h1{font-size:32px;font-weight:600}.markdown-body h2{font-size:24px;font-weight:600}.markdown-body h3{font-size:20px;font-weight:600}.markdown-body p{margin-top:0;margin-bottom:10px}.markdown-body ul{padding-left:0;margin-top:0;margin-bottom:0}.markdown-body code{font-family:Consolas,Liberation Mono,Menlo,Courier,monospace;font-size:12px}.markdown-body pre{margin-top:0;margin-bottom:0;font:12px Consolas,Liberation Mono,Menlo,Courier,monospace}.markdown-body:after,.markdown-body:before{display:table;content:\"\"}.markdown-body:after{clear:both}.markdown-body>:first-child{margin-top:0!important}.markdown-body>:last-child{margin-bottom:0!important}.markdown-body p,.markdown-body pre,.markdown-body ul{margin-top:0;margin-bottom:16px}.markdown-body h1,.markdown-body h2,.markdown-body h3{margin-top:24px;margin-bottom:16px;font-weight:600;line-height:1.25}.markdown-body h1{font-size:2em}.markdown-body h1,.markdown-body h2{padding-bottom:.3em;border-bottom:1px solid #eee}.markdown-body h2{font-size:1.5em}.markdown-body h3{font-size:1.25em}.markdown-body ul{padding-left:2em}.markdown-body li+li{margin-top:.25em}.markdown-body code{padding:0;padding-top:.2em;padding-bottom:.2em;margin:0;font-size:85%;background-color:rgba(0,0,0,.04);border-radius:3px}.markdown-body code:after,.markdown-body code:before{letter-spacing:-.2em;content:\"\\A0\"}.markdown-body pre{word-wrap:normal}.markdown-body pre{padding:16px;overflow:auto;font-size:85%;line-height:1.45;background-color:#f7f7f7;border-radius:3px}.markdown-body .full-commit .btn-outline:not(:disabled):hover{color:#4078c0;border:1px solid #4078c0}.hljs{display:block;overflow-x:auto;padding:.5em;color:#333;background:#f8f8f8}.hljs-comment{color:#998;font-style:italic}.hljs-literal{color:teal}.hljs-string{color:#d14}.markdown-body{box-sizing:border-box;min-width:200px;max-width:980px;margin:0 auto;padding:45px}@media screen and (max-width:480px){.markdown-body{padding:15px}}</style><article class=\"markdown-body\"><h1 id=\"github-markdown-html\">github-markdown-html</h1><p>.md -&gt; .html (with embedded Github styles)</p><p>Uses webpack to perform the following:</p><ul><li>turns your markdown into HTML markup (markdown-loader)</li><li>highlights fenced code blocks (highlight-loader)</li><li>drops the rendered markup in a basic HTML template (html-webpack-plugin)</li><li>embeds styles to make your page just like Github (github-markdown-css)</li><li>cleans embedded styles of any unused rules (html-webpack-uncss-plugin)</li></ul><h2 id=\"installation\">installation</h2><pre class=\"hljs\">npm install github-markdown-html
</pre><h2 id=\"simple-use-case\">simple use-case</h2><p>Once installed (globally) you can go into any of your repos with a <code>README.md</code> then execute <code>github-markdown-html</code>.</p><p>This will drop an <code>index.html</code> in the same directory that you can simply publish with the <a href=\"https://www.npmjs.com/package/gh-pages\">gh-pages</a> module: <code>gh-pages -d . -s index.html</code>.</p><p>(You can also gitignore <code>/index.html</code> to keep your master branch clean.)</p><h2 id=\"usage\">usage</h2><pre class=\"hljs\">github-markdown-html [script] [file]
</pre><ul><li><code>script</code> is one of <code>build</code> or <code>dev</code> (optional, defaults to <code>build</code>)</li><li><code>file</code> is the path to the markdown file to process (optional, defaults to <code>README.md</code>)</li></ul><h3 id=\"available-scripts\">available scripts</h3><ul><li><code>build</code> drops the built HTML in the current directory<pre class=\"hljs\">github-markdown-html build <span class=\"hljs-comment\"># open index.html</span>
</pre></li><li><code>dev</code> starts a development server listening on port 8080<pre class=\"hljs\">github-markdown-html start <span class=\"hljs-comment\"># open http://localhost:8080</span>
</pre></li></ul><h3 id=\"configuring-via-package-json-\">configuring via <code>package.json</code></h3><p>Certain options can also be configured via <code>package.json</code> by adding a <code>github-markdown-html</code> key:</p><pre class=\"hljs\">{
  <span class=\"hljs-attr\">&quot;github-markdown-html&quot;</span>: {
    <span class=\"hljs-attr\">&quot;parseTitle&quot;</span>: <span class=\"hljs-literal\">true</span>,
    <span class=\"hljs-attr\">&quot;html&quot;</span>: <span class=\"hljs-string\">&quot;html-webpack-plugin options&quot;</span>,
    <span class=\"hljs-attr\">&quot;markdown&quot;</span>: {
      <span class=\"hljs-attr\">&quot;path&quot;</span>: <span class=\"hljs-string\">&quot;path to markdown file&quot;</span>
    }
  }
}
</pre><p>See defaults in <code>/config/webpack.config.js</code>.</p><p><code>parseTitle</code> will expect the first line of your markdown to be an <code>h1</code> (using the <code># title</code> syntax) and will make that the page title.</p></article></body></html>"
`;
